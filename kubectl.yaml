apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: zoom-auto-host-key
spec:
  selector:
    matchLabels:
      app: zoom-auto-host-key
  replicas: 1
  template:
    metadata:
      labels:
        app: zoom-auto-host-key
    spec:
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: zoom-auto-host-key
      containers:
        - name: zoom-auto-host-key
          image: 191518685251.dkr.ecr.us-west-1.amazonaws.com/zoom-auto-host-key:latest
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: '2'
              memory: '4Gi'
            limits:
              cpu: '2'
              memory: '4Gi'
          volumeMounts:
            - mountPath: /var/www/html/database/sqlite
              name: persistent-storage
              subPath: database
            - mountPath: /root/.config/caddy
              name: persistent-storage
              subPath: caddy/config
            - mountPath: /root/.local/share/caddy
              name: persistent-storage
              subPath: caddy/data
            - mountPath: /var/log
              name: persistent-storage
              subPath: logs
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: zoom-auto-host-key
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: zoom-auto-host-key
---
apiVersion: v1
kind: Pod
metadata:
  name: zoom-auto-host-key
spec:
  initContainers:
    - name: zoom-auto-host-key-init-container
      image: busybox
      command: ['/bin/sh']
      args: ['-c', 'chown -R www-data:www-data /var/www/html']
      volumeMounts:
        - mountPath: /var/www/html/database/sqlite
          name: persistent-storage
          subPath: database
  containers:
    - name: zoom-auto-host-key-container
      image: busybox
      command: ['/bin/sh']
      args: ['-c', 'while true; do echo $(date -u) >> /data/out1.txt; sleep 5; done']
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: zoom-auto-host-key
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zoom-auto-host-key
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: zoom-auto-host-key
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zoom-auto-host-key
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: zoom-auto-host-key
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-04cd85da9dae3c2d2
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: zoom-auto-host-key
provisioner: efs.csi.aws.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: zoom-auto-host-key
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-1:191518685251:certificate/c9463a6f-cfce-4918-a4a6-10f3fc15bd30
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: zoom-auto-host-key-service
                port:
                  number: 80
